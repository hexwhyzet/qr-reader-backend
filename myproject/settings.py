"""
Django settings for myproject project.

Generated by 'django-admin startproject' using Django 5.0.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""
import os
from datetime import timedelta
from pathlib import Path

# from rest_framework_nested.runtests.settings import MIDDLEWARE_CLASSES

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv('DJANGO_SECRET')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

HOST = os.getenv('HOST')
DOMAIN = 'https://appsostra.ru'

ALLOWED_HOSTS = [
    '10.0.2.2', 'localhost', '127.0.0.1', HOST, 'localhost:8000',
    'appsostra.ru', 'admin.appsostra.ru', 'storage.appsostra.ru'
]

CSRF_TRUSTED_ORIGINS = [
    'https://localhost',
    'https://127.0.0.1',
    'https://appsostra.ru',
    'https://web.appsostra.ru',
    'https://admin.appsostra.ru',
]
CORS_ALLOW_ALL_ORIGINS = True

if DEBUG:
    ALLOWED_HOSTS = ['*']

# Application definition

INSTALLED_APPS = [
    'admin_interface',
    'colorfield',

    'users.authconfig.AuthConfig',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    'rest_framework',
    'storages',
    'rest_framework_simplejwt',
    'myapp',
    'food',
    'dispatch',
    'users',
    'tg_bot',

    'django.contrib.admin',

    'django_crontab',
]

CRONJOBS = [
    ("* * * * *", "dispatch.crons.need_to_open_notification", ">> /var/log/cron.log 2>&1"),
]

CRONTAB_COMMAND_PREFIX = (
    ". /app/.env; "
    "DJANGO_SETTINGS_MODULE=myproject.settings "
    "PYTHONPATH=/app "
    "PATH=/usr/local/bin:/usr/bin:/bin"
)

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

# if DEBUG:
#     MIDDLEWARE.append(
#         'core.middleware.LogRequestsMiddleware',
#     )

ROOT_URLCONF = 'myproject.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / "templates"],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'myproject.wsgi.application'

# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'ru-ru'

TIME_ZONE = 'Europe/Moscow'

CORS_ORIGIN_ALLOW_ALL = DEBUG
CORS_ALLOW_ALL_ORIGINS = True
CORS_ALLOW_CREDENTIALS = True
CORS_ALLOW_METHODS = ["GET", "POST", "PUT", "DELETE", "OPTIONS"]
CORS_ALLOW_HEADERS = ["*"]

USE_I18N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

MEDIA_ROOT = os.path.join(BASE_DIR, "media/")
STATIC_URL = '/static/'
MEDIA_URL = '/media/'

DATA_UPLOAD_MAX_MEMORY_SIZE = 100 * 1024 * 1024

STATICFILES_DIRS = (
    os.path.join(BASE_DIR, 'static/'),
)
STATICFILES_STORAGE = "django.contrib.staticfiles.storage.StaticFilesStorage"

# X_FRAME_OPTIONS = 'SAMEORIGIN'

REST_FRAMEWORK = {
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.AllowAny',
        # 'rest_framework.permissions.IsAuthenticated', # пока работает старая версия приложения, включить не можем
    ),
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ),
}

SIMPLE_JWT = {  # Числа дефолтные, за ними нет смысла
    'ACCESS_TOKEN_LIFETIME': timedelta(days=180), # experiment
    'SLIDING_TOKEN_REFRESH_LIFETIME': timedelta(days=1),
    'SLIDING_TOKEN_LIFETIME': timedelta(days=30),
    'SLIDING_TOKEN_REFRESH_LIFETIME_LATE_USER': timedelta(days=1),
    'SLIDING_TOKEN_LIFETIME_LATE_USER': timedelta(days=30),
}

CSRF_TRUSTED_ORIGINS = [
    'http://localhost:8000',
    f'http://{os.getenv("HOST")}:8000',
    'https://appsostra.ru',
    'https://admin.appsostra.ru',
    'https://storage.appsostra.ru',
]

USE_X_FORWARDED_HOST = True

DEFAULT_FILE_STORAGE = 'myapp.models.DefaultS3MediaStorage'
AWS_ACCESS_KEY_ID = os.getenv('S3_ACCESS_KEY_ID')
AWS_SECRET_ACCESS_KEY = os.getenv('S3_SECRET_ACCESS_KEY')
AWS_STORAGE_BUCKET_NAME = os.getenv('S3_STORAGE_BUCKET_NAME')
AWS_S3_REGION_NAME = os.getenv('S3_REGION_NAME')
AWS_S3_ENDPOINT_URL = f'https://storage.yandexcloud.net'
AWS_S3_CUSTOM_DOMAIN = f'storage.appsostra.ru/{AWS_STORAGE_BUCKET_NAME}'
AWS_S3_FILE_OVERWRITE = False
AWS_S3_ADDRESSING_STYLE = "path"
AWS_QUERYSTRING_AUTH = False

AUTH_USER_MODEL = 'users.User'

LOGIN_URL = '/accounts/login/'
LOGIN_REDIRECT_URL = '/tg_bot/link-telegram'
